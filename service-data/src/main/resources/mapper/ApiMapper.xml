<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsc.servicedata.mapper.ApiMapper">

    <insert id="insertApplyRecord">
        INSERT INTO applyRecord (userId,reason,applyTime,mail)
        VALUES (#{userId},#{reason},#{applyTime},#{mail})
    </insert>

    <select id="selectAllApiRecords" resultType="com.zsc.servicedata.entity.data.ApplyRecord" parameterType="Integer">
        <!--SELECT a.id,a.userId,a.reason,a.applyTime,a.mail,u.auth-->
        <!--FROM userInfo as u,applyRecord as a-->
        <!--<where>-->
            <!--u.id =  a.userId-->
            <!--<if test="auth == null">-->
                <!--and u.auth in (1,2,3)-->
            <!--</if>-->
            <!--<if test="auth != null">-->
                <!--and u.auth = #{auth}-->
            <!--</if>-->
        <!--</where>-->
        <!--ORDER BY a.applyTime DESC-->
select a.id,a.userId,a.reason,a.applyTime,a.mail,u.auth
FROM
userinfo AS u
Left Join applyrecord AS a ON u.id = a.userId
<where>
    <if test="auth == null">
        u.auth in (1,2,3)
    </if>
    <if test="auth != null">
        u.auth = #{auth}
    </if>
</where>
ORDER BY a.applyTime DESC
    </select>
    
    <update id="updateAuthStatus">
        UPDATE userInfo SET auth = #{auth} WHERE id in(
        <foreach collection="list" index="index" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>

    <resultMap id="RecordMap" type="com.zsc.servicedata.entity.data.ApplyRecord">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="userId" property="userId" jdbcType="BIGINT"/>
        <result column="reason" property="reason" jdbcType="VARCHAR"/>
        <result column="applyTime" property="applyTime" jdbcType="DATE"/>
        <result column="mail" property="mail" jdbcType="VARCHAR"/>
        <result column="auth" property="auth" jdbcType="SMALLINT"/>
    </resultMap>
    
    <select id="selectRecordsByUser" resultMap="RecordMap">
        SELECT a.id,a.userId,a.reason,a.applyTime,a.mail,u.auth
        FROM userInfo as u,applyRecord as a WHERE u.id =  a.userId AND
        u.id =  #{userId} ORDER BY a.applyTime DESC
    </select>

    <select id="selectWaitAuditNum" resultType="int">
        SELECT COUNT(*) FROM userInfo WHERE auth = 1
    </select>
</mapper>